{"version":3,"sources":["components/Personform.js","components/Person.js","components/Filter.js","services/persons.js","services/filterPersons.js","components/Notification.js","App.js","index.js"],"names":["Personform","props","onSubmit","addName","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Person","person","deleteButton","name","number","onClick","Filter","handleFilterWords","baseurl","axios","get","then","response","data","newObject","post","id","put","delete","filterAllPersons","persons","filterString","filter","re","RegExp","console","log","slicedName","slice","length","match","filterName","Notification","message","notificationType","className","App","filteredPersons","useState","setPersons","setNewName","setNewNumber","currentFilter","setFilter","notification","setNotification","setNotificationType","useEffect","personServices","event","target","preventDefault","personExists","find","window","confirm","personObject","updatedPerson","map","setTimeout","catch","error","addedPerson","concat","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d5f26bd.chunk.js","sourcesContent":["import React from 'react'\n\nconst Personform = (props) => {\n    return(\n        <>\n            <form onSubmit={props.addName}>\n            <div>\n                name: <input value={props.newName} onChange={props.handleNameChange}/>\n            </div>\n            <div>\n                number: <input value={props.newNumber} onChange={props.handleNumberChange}/>\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n            </form>\n        </>\n    )\n}\n\nexport default Personform","import React from 'react'\n\nconst Person = (props) => {\n    const{person, deleteButton} = props\n        return(\n            <div>\n                {person.name} {person.number} \n                <button onClick={deleteButton}> delete</button>\n            </div>\n        )\n}\n\nexport default Person","import React from 'react'\n\nconst Filter = (props) => {\n    return (\n        <div> \n            filter shown with <input onChange={props.handleFilterWords}/>\n        </div>\n    )\n}\n\nexport default Filter","import axios from 'axios'\nconst baseurl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseurl)\n    return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseurl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseurl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deleteOne = (id) => {\n    const request = axios.delete(`${baseurl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default {getAll, create, update, deleteOne}","\n\n// filtering names\nconst filterName = (name,filterString) => {\n    var re = new RegExp(filterString, 'i')\n    console.log(re)\n    // slice the name according to the search length\n    var slicedName = name.slice(0, filterString.length)\n    console.log(name, slicedName)\n    if(slicedName.match(re)) {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\nconst filterAllPersons = (persons,filterString) => {\n    return persons.filter((person) => filterName(person.name, filterString))\n}\n\nexport default filterAllPersons","import React from 'react'\n\nconst Notification = ({message, notificationType}) => {\n    if (message === null || notificationType === null) {\n        return null\n    }\n    if(notificationType === 'Notification'){\n        return (\n            <div>\n                <p className='notification'>\n                    {message}\n                </p>\n            </div>\n        )\n    }\n    else if (notificationType === 'Error'){\n        return (\n            <div>\n                <p className='error'>\n                    {message}\n                </p>\n            </div>\n        )\n    }\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Personform from './components/Personform'\nimport Person from './components/Person'\nimport Filter from './components/Filter'\nimport personServices from './services/persons'\nimport filterAllPersons from './services/filterPersons'\nimport Notification from './components/Notification'\nimport './index.css'\n\nconst App = () => {\n    //const {names} = props\n    //console.log(props)\n    const [ persons, setPersons] = useState([]) \n    const [ newName, setNewName ] = useState('Martin Fowler')\n    const [ newNumber, setNewNumber] = useState('39-44-5324523')\n    const [ currentFilter, setFilter] = useState('')\n    const [ notification, setNotification] = useState(null)\n    const [notificationType, setNotificationType] = useState(null)\n    var filteredPersons\n\n    const hook = () => {\n        personServices\n            .getAll()\n            .then(persons => {\n                setPersons(persons)\n            })\n    }\n    useEffect(hook, [])\n\n    // new person from input\n    const addName = (event) => {\n        event.preventDefault()\n        // check if the name already exists\n        const personExists = persons.find(person => person.name === newName)\n        console.log(personExists)\n\n        if (personExists) {\n            //alert(`${newName} is already added to phonebook`)\n            if(window.confirm(`${newName} is already added to the phonebook. Replace the old number with a new one?`)) {\n                var id = personExists.id\n                const personObject = {\n                    name: newName,\n                    number: newNumber\n                }\n                personServices\n                    .update(id,personObject)\n                    .then(updatedPerson => {\n                        setPersons(persons.map(person => person.id !== id ? person : updatedPerson))\n                        setNotification(`Updated ${updatedPerson.name}`)\n                        setNotificationType('Notification')\n                        setTimeout(() => {setNotification(null)}, 5000)\n                    })\n                    .catch(error => {\n                        console.log(\"Failed to update\")\n                        setNotification(`Information of ${personObject.name} has already been removed from the server`)\n                        setNotificationType('Error')\n                        setTimeout(() => {setNotification(null)}, 5000)\n                    })\n            }\n        }\n        else {\n            const personObject = {\n                name: newName,\n                number: newNumber\n            }\n            personServices\n                .create(personObject)\n                .then( addedPerson => {\n                    setPersons(persons.concat(addedPerson))\n                    setNewName('')\n                    setNewNumber('')\n                    setNotification(`Added ${addedPerson.name}`)\n                    setNotificationType('Notification')\n                    setTimeout(() => {setNotification(null)}, 5000)\n                })\n                .catch(error => {\n                    console.log('Failed to add new name')\n                })\n            \n            console.log('button clicked', event.target)\n        }\n    }\n\n    // handle changes in name input\n    const handleNameChange = (event) => {\n        console.log(event.target.value)\n        setNewName(event.target.value)\n        console.log('new name changed', newName)\n    }\n\n    // handle changes in number input\n    const handleNumberChange = (event) => {\n        console.log(event.target.value)\n        setNewNumber(event.target.value)\n        console.log('new name changed', newName)\n    }\n\n    // handle filter words\n    const handleFilterWords = (event) => {\n        console.log(event.target.value)\n        setFilter(event.target.value) \n    }\n\n    // delete button press\n    const deleteButton = (person) => {\n        var id = person.id\n        if(window.confirm(`Delete ${person.name}?`)) {\n            personServices\n            .deleteOne(id)\n            .then(() => {\n                setPersons(persons.filter(person => person.id !== id))\n                setNotification(`Deleted ${person.name}`)\n                setNotificationType('Notification')\n                setTimeout(() => {setNotification(null)}, 5000)\n            })\n            .catch(error => console.log(\"Failed to delete\"))\n        }\n        \n    }\n\n    if (currentFilter.length === 0) {\n        filteredPersons = persons\n    }\n    else {\n        filteredPersons = filterAllPersons(persons, currentFilter)\n        console.log(filteredPersons) \n    }\n    return (\n    <div>\n        <h2>Phonebook</h2>\n        <Notification message={notification} notificationType={notificationType} />\n        <Filter handleFilterWords={handleFilterWords} />\n        <h2>add a new</h2>\n        <Personform \n            addName={addName} \n            newName={newName} \n            handleNameChange={handleNameChange} \n            newNumber={newNumber} \n            handleNumberChange={handleNumberChange} \n        />\n        <h2>Numbers</h2>\n        {filteredPersons.map(person => \n            <Person \n                key={person.name}\n                person={person} \n                deleteButton={() => deleteButton(person)}\n            />\n        )}\n    </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}